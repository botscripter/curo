plugins {
    id "idea"
    id "java-library"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" version "1.4.32"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.5.0"
    id "org.springframework.boot" version "2.4.5"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.jetbrains.kotlin.kapt" version "1.5.0"
}

group = "ch.umb.curo"
version = "0.0.22"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

tasks.bootJar {enabled = false}
tasks.jar {enabled = true}

jar {
    baseName "curo-spring-boot-starter"
    manifest {
        attributes "Implementation-Version": "${project.version}"
    }
    into("META-INF/maven/$project.group/curo-spring-boot-starter") {
        from { generatePomFileForMavenJavaPublication }
        rename ".*", "pom.xml"
    }
}

java {
    withSourcesJar()
}

ext {
    camunda_version = "7.14.0"
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.camunda.bpm:camunda-bom:$camunda_version"
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    kapt "org.springframework.boot:spring-boot-configuration-processor"

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.12.3"

    api "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter:$camunda_version"
    api "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest:$camunda_version"
    api "org.camunda.spin:camunda-spin-core:1.10.1"
    api "org.camunda.spin:camunda-spin-dataformat-json-jackson:1.10.1"
    api "org.camunda.bpm:camunda-engine-plugin-spin:$camunda_version"

    compileOnly "org.springdoc:springdoc-openapi-kotlin:1.5.8"
    compileOnly "org.springdoc:springdoc-openapi-ui:1.5.8"
    compileOnly "com.auth0:java-jwt:3.15.0"
    compileOnly "com.auth0:jwks-rsa:0.17.1"

    compileOnly "org.mockito:mockito-core:3.9.0"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp:$camunda_version"
    testImplementation "com.h2database:h2"
    testImplementation "com.auth0:java-jwt:3.15.0"
    testImplementation "com.auth0:jwks-rsa:0.17.1"
    testImplementation "org.mockito:mockito-core:3.9.0"

}

test {
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "11"
    }
}

publishing {
    repositories {
        maven {
            def releaseRepo = "https://repo.umb.cloud/repository/maven-curo-releases" //TODO: release to new nexus
            def snapshotRepo = "" //TODO: release to new nexus
            url = version.endsWith("SNAPSHOT") ? snapshotRepo : releaseRepo

            credentials {
                username = project.findProperty("nexusUser") ?: System.getenv("UMB_NEXUS_USER")
                password = project.findProperty("nexusPassword")  ?: System.getenv("UMB_NEXUS_PASSWORD")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = "curo-spring-boot-starter"

            pom {
                name = "curo-spring-boot-starter"
            }
        }
    }
}
